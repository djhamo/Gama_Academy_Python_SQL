/*
 * Tiago DAgostino
 * Atividade 01
 */
 
CREATE DATABASE	ATIVIDADE_01;

USE ATIVIDADE_01;
-- 01
CREATE TABLE USUARIO_PERFIS
(
	ID				INT				NOT NULL IDENTITY(1, 1),
	NOME_PERFIL		VARCHAR(50)		NOT NULL,
	DESCRICAO		VARCHAR(500)    NULL,
	CONSTRAINT PK_USUARIO_PERFIS PRIMARY KEY (ID)
);

-- 02
CREATE TABLE USUARIO
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	ID_USUARIO_PERFIS	INT				NOT NULL,
	NOME				VARCHAR(50)		NOT NULL,
	LOGIN				VARCHAR(25)		NOT NULL,
	EMAIL				VARCHAR(250)	NOT NULL,
	SENHA				VARCHAR(25)		NOT NULL,
	ULTIMO_ACESSO		DATETIME		NOT NULL,
	CONSTRAINT PK_USUARIO PRIMARY KEY (ID),
	CONSTRAINT FK_USUARIO_USUARIO_PERFIS FOREIGN KEY (ID_USUARIO_PERFIS)
		REFERENCES USUARIO_PERFIS (ID)	
);

-- 03.	Controle de permissão às entidades
CREATE TABLE ROTINAS
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME_ROTINA			VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)    NULL,
	ENDERECO_TELA		VARCHAR(250)	NOT NULL,
	STATUS				BIT				NOT NULL,
	CONSTRAINT PK_ROTINAS PRIMARY KEY (ID),
);

-- 03.1
CREATE TABLE ROTINAS_USUARIO_PERFIS
( 
	ID_ROTINAS			INT 	NOT NULL,
	ID_USUARIO_PERFIS	INT 	NOT NULL,
	STATUS				BIT		NOT NULL, -- PERFIL PODE ACESSAR OU NÃO
	CONSTRAINT PK_ROTINAS_USUARIO_PERFIS PRIMARY KEY (ID_ROTINAS, ID_USUARIO_PERFIS),
	CONSTRAINT FK_ROTINAS_USUARIO_PERFIS_ROTINAS FOREIGN KEY (ID_ROTINAS)
		REFERENCES ROTINAS (ID),
	CONSTRAINT FK_ROTINAS_USUARIO_PERFIS_USUARIO_PERFIS FOREIGN KEY (ID_USUARIO_PERFIS)
		REFERENCES USUARIO_PERFIS (ID)
);

-- 04
CREATE TABLE CLIENTE 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	SOBRENOME			VARCHAR(100)	NULL,
	DT_NASCIMENTO		DATE			NULL,
	NATURALIDADE		VARCHAR(50)		NULL,
	NOME_MAE			VARCHAR(50)		NULL,
	NOME_PAI			VARCHAR(50)		NULL,
	CONSTRAINT PK_CLIENTE PRIMARY KEY (ID)	
);

CREATE TABLE CLIENTE_EMAILS 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	ID_CLIENTE			INT				NOT NULL,  
	EMAIL				VARCHAR(250)	NOT NULL,
	CONSTRAINT PK_CLIENTE_EMAILS PRIMARY KEY (ID),
	CONSTRAINT FK_CLIENTE_EMAILS_CLIENTE FOREIGN KEY (ID_CLIENTE)
		REFERENCES CLIENTE (ID)
);

CREATE TABLE TIPO_TELEFONES 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)	NOT NULL,
	CONSTRAINT PK_TIPO_TELEFONES PRIMARY KEY (ID)
);

CREATE TABLE CLIENTE_TELEFONES 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	ID_CLIENTE			INT				NOT NULL,  -- FK (Chave Estrangeira)
	ID_TIPO_TELEFONES	INT				NOT NULL,
	DDD					VARCHAR(3)		NOT NULL,
	N_TELEFONE			VARCHAR(9)		NOT NULL,
	CONSTRAINT PK_CLIENTE_TELEFONES PRIMARY KEY (ID),
	CONSTRAINT FK_CLIENTE_TELEFONES_CLIENTE FOREIGN KEY (ID_CLIENTE)
		REFERENCES CLIENTE (ID),
	CONSTRAINT FK_CLIENTE_TELEFONES_TIPO_TELEFONES FOREIGN KEY (ID_TIPO_TELEFONES)
		REFERENCES TIPO_TELEFONES (ID)
);

CREATE TABLE TIPO_ENDERECOS 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)	NOT NULL,
	CONSTRAINT PK_TIPO_ENDERECOS PRIMARY KEY (ID)
);


CREATE TABLE UF
(
    ID 					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	SIGLA				VARCHAR(2)		NOT NULL,
	CONSTRAINT PK_UF PRIMARY KEY (ID)
);

CREATE TABLE CIDADE
(
    ID 					INT				NOT NULL IDENTITY(1, 1),
    ID_UF				INT				NOT NULL,
	NOME				VARCHAR(50)		NOT NULL,
	N_IBGE				VARCHAR(8)		NOT NULL,
	CONSTRAINT PK_CIDADE PRIMARY KEY (ID),
	CONSTRAINT FK_CIDADE_UF FOREIGN KEY (ID_UF)
		REFERENCES UF (ID)	
);

CREATE TABLE CLIENTE_ENDERECOS 
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_CLIENTE				INT				NOT NULL,
	ID_TIPO_ENDERECOS		INT				NOT NULL,
	ID_CIDADE				INT				NOT NULL,
	TIPO_LOGRADOURO			VARCHAR(20)		NOT NULL,
	NOME_LOGRADOURO			VARCHAR(100)	NOT NULL,
	NUMERO					VARCHAR(6)		NULL,
	COMPLEMENTO				VARCHAR(20)		NOT NULL,
	BAIRRO					VARCHAR(50)		NOT NULL,
	CEP						VARCHAR(8)		NOT NULL,
	PAIS					VARCHAR(50)		NOT NULL,
	CONSTRAINT PK_CLIENTE_ENDERECOS PRIMARY KEY (ID),
	CONSTRAINT FK_CLIENTE_ENDERECOS_CLIENTE FOREIGN KEY (ID_CLIENTE)
		REFERENCES CLIENTE (ID),	
	CONSTRAINT FK_CLIENTE_ENDERECOS_TIPO_ENDERECOS FOREIGN KEY (ID_TIPO_ENDERECOS)
		REFERENCES TIPO_ENDERECOS (ID),	
	CONSTRAINT FK_CLIENTE_ENDERECOS_CIDADE FOREIGN KEY (ID_CIDADE)
		REFERENCES CIDADE (ID)	
);

CREATE TABLE TIPO_DOCUMENTOS 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)	NOT NULL,
	CONSTRAINT PK_TIPO_DOCUMENTOS PRIMARY KEY (ID)
);

CREATE TABLE CLIENTE_DOCUMENTOS
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_CLIENTE				INT				NOT NULL,
	ID_TIPO_DOCUMENTOS		INT				NOT NULL,
	N_DOCUMENTO				VARCHAR(50)     NOT NULL,
	CONSTRAINT PK_CLIENTE_DOCUMENTOS PRIMARY KEY (ID),
	CONSTRAINT FK_CLIENTE_DOCUMENTOS_CLIENTE FOREIGN KEY (ID_CLIENTE)
		REFERENCES CLIENTE (ID),
	CONSTRAINT FK_CLIENTE_DOCUMENTOS_TIPO_DOCUMENTOS FOREIGN KEY (ID_TIPO_DOCUMENTOS)
		REFERENCES TIPO_DOCUMENTOS (ID)	
);

-- 05

CREATE TABLE FORNECEDOR
(
	ID 						INT				NOT NULL IDENTITY(1, 1),
	RAZAO_SOCIAL			VARCHAR(50)		NOT NULL,
	NOME_FANTASIA			VARCHAR(250)	NOT NULL,
	CNPJ					VARCHAR(14)		NOT NULL,
	DT_CADASTRO				DATETIME		NOT NULL,
	CONSTRAINT PK_FORNECEDORES PRIMARY KEY (ID)
);

CREATE TABLE SETOR 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)	NOT NULL,
	CONSTRAINT PK_SETOR PRIMARY KEY (ID)
);

CREATE TABLE CARGO 
(
	ID					INT				NOT NULL IDENTITY(1, 1),
	NOME				VARCHAR(50)		NOT NULL,
	DESCRICAO			VARCHAR(500)	NOT NULL,
	CONSTRAINT PK_CARGO PRIMARY KEY (ID)
);

-- 05.1

CREATE TABLE FORNECEDOR_CONTATOS
(
	ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_FORNECEDOR			INT				NOT NULL,
	ID_SETOR				INT				NOT NULL,
	ID_CARGO				INT				NOT NULL,
	NOME					VARCHAR(50)		NOT NULL,
	CONSTRAINT PK_FORNECEDOR_CONTATOS PRIMARY KEY (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR)
		REFERENCES FORNECEDOR (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_SETOR FOREIGN KEY (ID_SETOR)
		REFERENCES SETOR (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_CARGO FOREIGN KEY (ID_CARGO)
		REFERENCES CARGO (ID),
);

CREATE TABLE FORNECEDOR_CONTATOS_EMAILS 
(
	ID						INT				NOT NULL IDENTITY(1, 1),
	ID_FORNECEDOR_CONTATOS	INT				NOT NULL,  
	EMAIL					VARCHAR(250)	NOT NULL,
	CONSTRAINT PK_FORNECEDOR_CONTATOS_EMAILS PRIMARY KEY (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_EMAILS_CLIENTE FOREIGN KEY (ID_FORNECEDOR_CONTATOS)
		REFERENCES FORNECEDOR_CONTATOS (ID)
);


CREATE TABLE FORNECEDOR_CONTATOS_TELEFONES 
(
	ID						INT				NOT NULL IDENTITY(1, 1),
	ID_FORNECEDOR_CONTATOS	INT				NOT NULL,  
	ID_TIPO_TELEFONES		INT				NOT NULL,
	DDD						VARCHAR(3)		NOT NULL,
	N_TELEFONE				VARCHAR(9)		NOT NULL,
	CONSTRAINT PK_FORNECEDOR_CONTATOS_TELEFONES PRIMARY KEY (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_TELEFONES_FORNECEDOR_CONTATOS FOREIGN KEY (ID_FORNECEDOR_CONTATOS)
		REFERENCES FORNECEDOR_CONTATOS (ID),
	CONSTRAINT FK_FORNECEDOR_CONTATOS_TELEFONES_TIPO_TELEFONES FOREIGN KEY (ID_TIPO_TELEFONES)
		REFERENCES TIPO_TELEFONES (ID)
);

-- 05.2

CREATE TABLE FORNECEDOR_ENDERECOS 
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_FORNECEDOR			INT				NOT NULL,
	ID_TIPO_ENDERECOS		INT				NOT NULL,
	ID_CIDADE				INT				NOT NULL,
	TIPO_LOGRADOURO			VARCHAR(20)		NOT NULL,
	NOME_LOGRADOURO			VARCHAR(100)	NOT NULL,
	NUMERO					VARCHAR(6)		NULL,
	COMPLEMENTO				VARCHAR(20)		NOT NULL,
	BAIRRO					VARCHAR(50)		NOT NULL,
	CEP						VARCHAR(8)		NOT NULL,
	PAIS					VARCHAR(50)		NOT NULL,
	CONSTRAINT PK_FORNECEDOR_ENDERECOS PRIMARY KEY (ID),
	CONSTRAINT FK_FORNECEDOR_ENDERECOS_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR)
		REFERENCES FORNECEDOR (ID),	
	CONSTRAINT FK_FORNECEDOR_ENDERECOS_TIPO_ENDERECOS FOREIGN KEY (ID_TIPO_ENDERECOS)
		REFERENCES TIPO_ENDERECOS (ID),	
	CONSTRAINT FK_FORNECEDOR_ENDERECOS_CIDADE FOREIGN KEY (ID_CIDADE)
		REFERENCES CIDADE (ID)	
);

-- 05.3

CREATE TABLE FORNECEDOR_FILIAIS
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_FORNECEDOR			INT				NOT NULL,
	RAZAO_SOCIAL			VARCHAR(50)		NOT NULL,
	NOME_FANTASIA			VARCHAR(250)	NOT NULL,
	CNPJ					VARCHAR(14)		NOT NULL,
	CONSTRAINT PK_FORNECEDOR_FILIAIS PRIMARY KEY (ID),
	CONSTRAINT FK_FORNECEDOR_FILIAIS_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR)
		REFERENCES FORNECEDOR (ID)
);

-- 06
CREATE TABLE LOJA
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	NOME_LOJA				VARCHAR(100)	NOT NULL,
	CNPJ					VARCHAR(14)		NOT NULL,
	CONSTRAINT PK_LOJAS PRIMARY KEY (ID),

)

-- 06.1

CREATE TABLE LOJA_TELEFONES 
(
	ID						INT				NOT NULL IDENTITY(1, 1),
	ID_LOJA					INT				NOT NULL,  
	ID_TIPO_TELEFONES		INT				NOT NULL,
	DDD						VARCHAR(3)		NOT NULL,
	N_TELEFONE				VARCHAR(9)		NOT NULL,
	CONSTRAINT PK_LOJA_TELEFONES PRIMARY KEY (ID),
	CONSTRAINT FK_LOJA_TELEFONES_LOJA FOREIGN KEY (ID_LOJA)
		REFERENCES LOJA (ID),
	CONSTRAINT FK_LOJA_TELEFONES_TIPO_TELEFONES FOREIGN KEY (ID_TIPO_TELEFONES)
		REFERENCES TIPO_TELEFONES (ID)
);

-- 06.2

CREATE TABLE LOJA_ENDERECOS 
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_LOJA					INT				NOT NULL,
	ID_TIPO_ENDERECOS		INT				NOT NULL,
	ID_CIDADE				INT				NOT NULL,
	TIPO_LOGRADOURO			VARCHAR(20)		NOT NULL,
	NOME_LOGRADOURO			VARCHAR(100)	NOT NULL,
	NUMERO					VARCHAR(6)		NULL,
	COMPLEMENTO				VARCHAR(20)		NOT NULL,
	BAIRRO					VARCHAR(50)		NOT NULL,
	CEP						VARCHAR(8)		NOT NULL,
	PAIS					VARCHAR(50)		NOT NULL,
	CONSTRAINT PK_LOJA_ENDERECOS PRIMARY KEY (ID),
	CONSTRAINT FK_LOJA_ENDERECOS_LOJA FOREIGN KEY (ID_LOJA)
		REFERENCES LOJA (ID),	
	CONSTRAINT FK_LOJA_ENDERECOS_TIPO_ENDERECOS FOREIGN KEY (ID_TIPO_ENDERECOS)
		REFERENCES TIPO_ENDERECOS (ID),	
	CONSTRAINT FK_LOJA_ENDERECOS_CIDADE FOREIGN KEY (ID_CIDADE)
		REFERENCES CIDADE (ID)	
);

-- 07

CREATE TABLE PRODUTO 
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	NOME					VARCHAR(50)		NOT NULL,
	DESCRICAO				VARCHAR(500)	NOT NULL,
	VALOR_UNITARIO			DECIMAL(10, 2)	NOT NULL,
	QUANTIDADE				DECIMAL(10, 2)	NOT NULL,
	UNIDADE					VARCHAR(15)		NOT NULL,
	CONSTRAINT PK_PRODUTO PRIMARY KEY (ID),

);

-- 07.1 •	Variações de produto
CREATE TABLE PRODUTO_VARIACOES
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_PRODUTO				INT				NOT NULL,
	NOME					VARCHAR(50)		NOT NULL,
	DESCRICAO				VARCHAR(500)	NOT NULL,
	VALOR_UNITARIO			DECIMAL(10, 2)	NOT NULL,
	QUANTIDADE				DECIMAL(10, 2)	NOT NULL,
	CONSTRAINT PK_PRODUTO_VARIACOES PRIMARY KEY (ID),
	CONSTRAINT FK_PRODUTO_VARIACOES_PRODUTO FOREIGN KEY (ID_PRODUTO)
		REFERENCES PRODUTO (ID)
);

-- 07.2 •	Controle de estoque
CREATE TABLE PRODUTO_CONTROLE_ESTOQUE
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_PRODUTO				INT				NOT NULL,
	ID_USUARIO				INT				NOT NULL,
	ACAO					VARCHAR(8)		NOT NULL, --PODIA SER BIT ? 0 SAIDA 1 ENTRADA
	COMENTARIO_ACAO			VARCHAR(500)	NOT NULL,
	QUANTIDADE				DECIMAL(10, 2)	NOT NULL,
	DATA					DATETIME		NOT NULL,
	CONSTRAINT PK_PRODUTO_CONTROLE_ESTOQUE PRIMARY KEY (ID),
	CONSTRAINT FK_PRODUTO_CONTROLE_ESTOQUE_PRODUTO FOREIGN KEY (ID_PRODUTO)
		REFERENCES PRODUTO (ID),
	CONSTRAINT FK_PRODUTO_CONTROLE_ESTOQUE_USUARIO FOREIGN KEY (ID_USUARIO)
		REFERENCES USUARIO (ID)
);

-- 8

CREATE TABLE VENDA
(
    ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_USUARIO				INT				NOT NULL,
	ID_CLIENTE				INT				NOT NULL,
	VALOR_FINAL				DECIMAL(10, 2)	NOT NULL,
	PERCENTUAL_DESCONTO		DECIMAL(3, 2)	NOT NULL,
	DATA_VENDA				DATETIME		NOT NULL,

	CONSTRAINT PK_VENDA PRIMARY KEY (ID),
	CONSTRAINT FK_VENDA_USUARIO FOREIGN KEY (ID_USUARIO)
		REFERENCES USUARIO (ID),
	CONSTRAINT FK_VENDA_CLIENTE FOREIGN KEY (ID_CLIENTE)
		REFERENCES CLIENTE (ID)
	
);

-- 8.1 •	Lista com os Ids dos produtos que estão sendo comprados

CREATE TABLE VENDA_PRODUTOS
(
   	ID 						INT				NOT NULL IDENTITY(1, 1),
	ID_VENDA				INT				NOT NULL,
	-- ACHO Q VALE COLOCAR ESSES CAMPOS TBM
	--QUANTIDADE				INT				NOT NULL,
	--VALOR_VENDA				DECIMAL(10, 2)	NOT NULL,
	--PERCENTUAL_DESCONTO		DECIMAL(3, 2)	NOT NULL,
	--IMPOSTO					DECIMAL(10, 2)	NOT NULL,
	CONSTRAINT PK_VENDA_PRODUTOS PRIMARY KEY (ID),
	CONSTRAINT FK_VENDA_PRODUTOS_VENDA FOREIGN KEY (ID_VENDA)
		REFERENCES VENDA (ID)
);
